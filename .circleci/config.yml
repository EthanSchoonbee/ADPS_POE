version: 2.1
orbs:
  node: circleci/node@5
jobs:
  say-hello:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  sonarqube:
    working_directory: ~/build
    docker:
      - image: cimg/node:18.17
    resource_class: small
    steps:
      - run:
          name: Install JDK 17
          command: |
            sudo apt-get update
            sudo apt-get install -y openjdk-17-jdk
      - run:
          name: Verify Java Installation
          command: java -version
      - run:
          name: Cleanup build directory
          command: rm -rf ~/build/repo || true
      - run:
          name: Create build directory
          command: mkdir -p ~/build/repo
      - checkout:
          path: ~/build/repo
      - run:
          name: Download Sonar Scanner
          command: curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
      - run:
          name: Unzip Sonar Scanner
          command: unzip sonar-scanner.zip
      - run:
          name: Move Sonar Scanner
          command: mv sonar-scanner-4.7.0.2747-linux sonar-scanner
      - run:
          name: Add sonar-scanner to PATH
          command: |
            echo 'export PATH="$PATH:$(pwd)/sonar-scanner/bin"' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Find files in current directory
          command: find .
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Run Sonar Scanner
          command: |
            SONAR_BRANCH="${CIRCLE_BRANCH:-master}"
            echo "Sonar branch value is: " $SONAR_BRANCH
            echo "Sonar org value is : "$SONAR_ORG
            sonar-scanner \
            -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
            -Dsonar.organization="$SONAR_ORG" \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.exclusions="**/android/**,**/ios/**" \
            -Dsonar.login="$SONAR_TOKEN" \
            -Dsonar.branch.name="$SONAR_BRANCH" \
            -Dsonar.sources="."

  test-node:
    executor: node/default
    working_directory: ~/project/frontend
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm install jest-junit
      - run:
          name: Run tests
          command: npm run test --ci --runInBand --reporters=default --reporters=jest-junit
      - store_test_results:
          path: ./test-results/

  build-node:
    executor: node/default
    working_directory: ~/project/frontend
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Build project
          command: |
            CI=false npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build

workflows:
  build-and-test:
    jobs:
      - say-hello
      - sonarqube
      - test-node
      - build-node:
          requires:
            - test-node
