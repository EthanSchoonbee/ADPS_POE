version: 2.1

orbs:
  node: circleci/node@5

jobs:
  test-node:
    executor: node/default
    working_directory: ~/project/frontend
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm install jest-junit
      - run:
          name: Run tests
          command: npm run test --ci --runInBand --reporters=default --reporters=jest-junit
      - store_test_results:
          path: ./test-results/

  build-node:
    executor: node/default
    working_directory: ~/project/frontend
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Build project
          command: CI=false npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build

  sonarqube:
    docker:
      - image: sonarsource/sonar-scanner-cli
    working_directory: ~/project/frontend
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: apk add --no-cache openssh git curl
      - run:
          name: Run SonarQube Scanner
          command: |
            SONAR_BRANCH="${CIRCLE_BRANCH:-master}"
            echo "Sonar branch value is: $SONAR_BRANCH"
            sonar-scanner \
              -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
              -Dsonar.organization="$SONAR_ORG" \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.exclusions="**/android/**,**/ios/**" \
              -Dsonar.login="$SONAR_TOKEN" \
              -Dsonar.branch.name="$SONAR_BRANCH" \
              -Dsonar.sources="."

workflows:
  build-and-test:
    jobs:
      - test-node
      - build-node:
          requires:
            - test-node
      - sonarqube:
          requires:
            - build-node
