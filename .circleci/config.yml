# This config was automatically generated from your source code
# Stacks detected: cicd:github-actions:.github/workflows,deps:node:frontend,test:jest:
version: 2.1
orbs:
  node: circleci/node@5
jobs:
  say-hello:
      # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
      # See: https://circleci.com/docs/configuration-reference/#executor-job
      docker:
        - image: cimg/base:stable
      # Add steps to the job
      # See: https://circleci.com/docs/configuration-reference/#steps
      steps:
        - checkout
        - run:
            name: "Say hello"
            command: "echo Hello, World!"
  test-node:
    # Install node dependencies and run tests
    executor: node/default
    working_directory: ~/project/frontend
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm install jest-junit
      - run:
          name: Run tests
          command: npm run test --ci --runInBand --reporters=default --reporters=jest-junit
      - store_test_results:
          path: ./test-results/
  build-node:
    # Build node project
    executor: node/default
    working_directory: ~/project/frontend
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Build project
          command: |
            CI=false npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      # Copy output to artifacts dir
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build
          
workflows:
  build-and-test:
    jobs:
      - say-hello
      - test-node
      - build-node:
          requires:
            - test-node
